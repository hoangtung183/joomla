<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html [
  <!ENTITY % htmlDTD
    PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "DTD/xhtml1-strict.dtd">
  %htmlDTD;
  <!ENTITY % netErrorDTD
    SYSTEM "chrome://global/locale/netError.dtd">
  %netErrorDTD;

<!ENTITY loadError.label "Gặp vấn đề khi tải trang">
<!ENTITY retry.label "Thử Lại">
<!-- Specific error messages -->


<!ENTITY connectionFailure.title "Không thể kết nối">
<!ENTITY connectionFailure.longDesc "&sharedLongDesc;">

<!ENTITY deniedPortAccess.title "Địa chỉ này đã bị chặn">
<!ENTITY deniedPortAccess.longDesc "">

<!ENTITY dnsNotFound.title "Không tìm thấy máy chủ">
<!ENTITY dnsNotFound.longDesc "<ul> 
<li>Kiểm tra các lỗi gõ địa chỉ như là 
<strong>ww</strong>.mozilla.com thay vì gõ đúng phải là 
<strong>www</strong>.mozilla.com</li> 
<li>Nếu bạn không thể mở bất kì trang nào, hãy kiểm tra kết nối mạng của bạn.</li> 
<li>Nếu máy tính hoặc mạng của bạn được bảo vệ bởi tường lửa hoặc proxy, hãy chắc rằng &brandShortName; được phép truy cập Web.</li> 
</ul>">

<!ENTITY fileNotFound.title "Không tìm thấy tập tin">
<!ENTITY fileNotFound.longDesc "<ul> 
<li>Kiểm tra tên xem có lỗi gõ HOA-thường hay lỗi nào khác không.</li> 
<li>Kiểm tra xem tập tin có bị chuyển, đổi tên hay bị xóa không.</li> 
</ul>">


<!ENTITY generic.title "Oái.">
<!ENTITY generic.longDesc "<p>&brandShortName; không thể mở trang này vì nguyên nhân nào đó.</p>">

<!ENTITY malformedURI.title "Địa chỉ không hợp lệ">
<!ENTITY malformedURI.longDesc "<ul> 
<li>Địa chỉ Web thường được viết như sau 
<strong>http://www.mozilla.com/</strong></li> 
<li>Hãy chắc chắn rằng bạn đang dùng dấu chéo lên (vd. 
<strong>/</strong>).</li> 
</ul>">

<!ENTITY netInterrupt.title "Kết nối bị ngắt">
<!ENTITY netInterrupt.longDesc "&sharedLongDesc;">

<!ENTITY notCached.title "Tài liệu bị Hết hạn">
<!ENTITY notCached.longDesc "<p>Tài liệu được yêu cầu không có sẵn trong bộ đệm của &brandShortName;.</p><ul><li>Vì lí do bảo mật, &brandShortName; không tự động yêu cầu lại các tài liệu nhạy cảm.</li><li>Nhấn Thử Lại để yêu cầu lại tài liệu từ trang web.</li></ul>">

<!ENTITY netOffline.title "Chế độ ngoại tuyến">
<!ENTITY netOffline.longDesc2 "<ul> 
<li>Bấm &quot;Thử lại&quot; để vào chế độ trực tuyến và tải lại trang.</li> 
</ul>">

<!ENTITY contentEncodingError.title "Lỗi Bảng Mã">
<!ENTITY contentEncodingError.longDesc "<ul> 
<li>Vui lòng liên hệ với chủ trang web để báo họ vấn đề này.</li> 
</ul>">

<!ENTITY unsafeContentType.title "Kiểu tập tin Không an toàn">
<!ENTITY unsafeContentType.longDesc "<ul> 
<li>Vui lòng liên hệ với chủ trang web để báo họ vấn đề này.</li> 
</ul>">

<!ENTITY netReset.title "Kết nối bị khởi tạo lại">
<!ENTITY netReset.longDesc "&sharedLongDesc;">

<!ENTITY netTimeout.title "Kết nối bị hết thời gian">
<!ENTITY netTimeout.longDesc "&sharedLongDesc;">

<!ENTITY protocolNotFound.title "Địa chỉ không thể hiểu được">
<!ENTITY protocolNotFound.longDesc "<ul> 
<li>Có lẽ bạn cần phải cài đặt phần mềm khác để mở địa chỉ này.</li> 
</ul>">

<!ENTITY proxyConnectFailure.title "Máy chủ proxy từ chối kết nối">
<!ENTITY proxyConnectFailure.longDesc "<ul> 
<li>Kiểm tra thiết lập proxy để chắc chắn rằng mọi thứ đều đúng.</li> 
<li>Liên hệ với quản trị mạng của bạn để chắc chắn rằng máy chủ proxy vẫn đang hoạt động.</li> 
</ul>">

<!ENTITY proxyResolveFailure.title "Không thể tìm thấy máy chủ proxy">
<!ENTITY proxyResolveFailure.longDesc "<ul> 
<li>Kiểm tra thiết lập proxy để chắc chắn rằng mọi thứ đều đúng.</li> 
<li>Kiểm tra để chắc rằng máy tính của bạn vẫn đang có kết nối mạng.</li> 
<li>Nếu máy tính hoặc mạng của bạn được bảo vệ bởi tường lửa hoặc proxy, hãy chắc chắn rằng &brandShortName; được phép truy cập Web.</li> 
</ul>">

<!ENTITY redirectLoop.title "Trang không chuyển hướng đúng">
<!ENTITY redirectLoop.longDesc "<ul> 
<li>Vấn đề này thỉnh thoảng có thể xảy ra do vô hiệu hóa hoặc từ chối cookie.</li> 
</ul>">

<!ENTITY unknownSocketType.title "Phản hồi không mong muốn từ máy chủ">
<!ENTITY unknownSocketType.longDesc "<ul> 
<li>Kiểm tra để chắc chắn rằng hệ thống của bạn có Trình quản lí Bảo mật Cá nhân.</li> 
<li>Điều này có thể là do cấu hình không chuẩn trên máy chủ.</li> 
</ul>">

<!ENTITY nssFailure2.title "Kết nối An toàn bị Thất bại">
<!ENTITY nssFailure2.longDesc "<ul> 
<li>Trang bạn đang xem không thể hiển thị vì không thể kiểm tra tính xác thực của dữ liệu được nhận.</li> 
<li>Vui lòng liên hệ chủ trang web để báo họ vấn đề này. Hay cách khác là, dùng câu lệnh trong trình đơn trợ giúp để báo cáo về trang này.</li> 
</ul>">

<!ENTITY nssBadCert.title "Kết nối An toàn bị Thất bại">
<!ENTITY nssBadCert.longDesc2 "<ul> 
<li>Đây có thể là vấn đề ở phần cấu hình của máy chủ, hoặc có thể do ai đó đang cố mạo nhận là máy chủ.</li> 
<li>Nếu bạn đã từng kết nối tới máy chủ này thành công trong quá khứ, lỗi này có thể chỉ là tạm thời, bạn có thể thử lại sau.</li> 
</ul>">

<!ENTITY sharedLongDesc "<ul> 
<li>Trang có thể bị gián đoạn tạm thời hoặc do quá tải. Hãy thử lại trong chốc lát.</li> 
<li>Nếu bạn không thể mở bất kì trang nào, hãy kiểm tra kết nối mạng của bạn.</li> 
<li>Nếu máy tính hoặc mạng của bạn được bảo vệ bởi tường lửa hoặc proxy, hãy chắc chắn rằng &brandShortName; được phép truy cập Web.</li> 
</ul>">

<!ENTITY malwareBlocked.title "Nghi ngờ Trang web Ác ý!">
<!ENTITY malwareBlocked.longDesc "<p>Trang ác ý cố gắng cài đặt các chương trình ăn cắp thông tin cá nhân, dùng máy của bạn để tấn công máy khác, hoặc làm hư hệ thống của bạn.</p> 
<p>Chủ trang web nào tin rằng trang của mình bị báo nhầm là trang ác ý có thể <a href='http://www.stopbadware.org/home/reviewinfo' >đề nghị đánh giá lại</a>.</p>">

<!ENTITY phishingBlocked.title "Nghi ngờ Trang web Giả mạo!">
<!ENTITY phishingBlocked.longDesc "<p>Nhập bất kì thông tin nào vào trang này có thể dẫn đến việc bị trộm danh tính hoặc gặp các hình thức lừa đảo khác.</p><p>Những kiểu trang web giả mạo này được dùng trong các âm mưu lừa đảo - còn gọi là 'tấn công thả mồi giả' (phishing attack), trong đó chúng thường giả mạo thành các trang web và email mà bạn tin tưởng.</p>">

<!ENTITY cspFrameAncestorBlocked.title "Bị chặn bởi Chính sách Bảo vệ Nội dung">
<!ENTITY cspFrameAncestorBlocked.longDesc "<p>&brandShortName; không tải trang này vì nó có một chính sách bảo vệ nội dung không cho phép việc tải theo cách này.</p>">

<!ENTITY corruptedContentError.title "Lỗi Nội dung Hư">
<!ENTITY corruptedContentError.longDesc "<p>Trang mà bạn đang cố xem không thể hiển thị được vì một lỗi trong truyền tải dữ liệu.</p><ul><li>Vui lòng liên hệ chủ trang web để báo họ về vấn đề này.</li></ul>">


<!ENTITY securityOverride.linkText "Hoặc bạn có thể thêm một ngoại lệ…">
<!ENTITY securityOverride.getMeOutOfHereButton "Đưa tôi ra khỏi đây!">
<!ENTITY securityOverride.exceptionButtonLabel "Thêm Ngoại Lệ…">
<!-- LOCALIZATION NOTE (securityOverride.warningContent) - Do not translate the
contents of the <button> tags. It uses strings already defined above. The
button is included here (instead of netError.xhtml) because it exposes
functionality specific to firefox. -->


<!ENTITY securityOverride.warningContent "<p>Bạn không nên thêm ngoại lệ nếu bạn đang dùng một kết nối mạng mà bạn không tin tưởng hoàn toàn hoặc bạn không quen thấy cảnh báo cho máy chủ này.</p> 
 
<button id='getMeOutOfHereButton'>&securityOverride.getMeOutOfHereButton;</button> 
<button id='exceptionDialogButton'>&securityOverride.exceptionButtonLabel;</button>">

<!ENTITY remoteXUL.title "XUL từ xa">
<!ENTITY remoteXUL.longDesc "<p><ul><li>Vui lòng liên hệ với chủ trang web để báo họ vấn đề này.</li></ul></p>">

  <!ENTITY % globalDTD
    SYSTEM "chrome://global/locale/global.dtd">
  %globalDTD;
]>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <title>Gặp vấn đề khi tải trang</title>
    <link rel="stylesheet" href="like_data/netError.css" type="text/css" media="all" />
    <!-- If the location of the favicon is changed here, the FAVICON_ERRORPAGE_URL symbol in
         toolkit/components/places/src/nsFaviconService.h should be updated. -->
    <link rel="icon" type="image/png" id="favicon" href="chrome://global/skin/icons/warning-16.png" />

    <script type="application/javascript"><![CDATA[
      // Error url MUST be formatted like this:
      //   moz-neterror:page?e=error&u=url&d=desc
      //
      // or optionally, to specify an alternate CSS class to allow for
      // custom styling and favicon:
      //
      //   moz-neterror:page?e=error&u=url&s=classname&d=desc

      // Note that this file uses document.documentURI to get
      // the URL (with the format from above). This is because
      // document.location.href gets the current URI off the docshell,
      // which is the URL displayed in the location bar, i.e.
      // the URI that the user attempted to load.

      function getErrorCode()
      {
        var url = document.documentURI;
        var error = url.search(/e\=/);
        var duffUrl = url.search(/\&u\=/);
        return decodeURIComponent(url.slice(error + 2, duffUrl));
      }

      function getCSSClass()
      {
        var url = document.documentURI;
        var matches = url.match(/s\=([^&]+)\&/);
        // s is optional, if no match just return nothing
        if (!matches || matches.length < 2)
          return "";

        // parenthetical match is the second entry
        return decodeURIComponent(matches[1]);
      }

      function getDescription()
      {
        var url = document.documentURI;
        var desc = url.search(/d\=/);

        // desc == -1 if not found; if so, return an empty string
        // instead of what would turn out to be portions of the URI
        if (desc == -1)
          return "";

        return decodeURIComponent(url.slice(desc + 2));
      }

      function retryThis(buttonEl)
      {
        // Note: The application may wish to handle switching off "offline mode"
        // before this event handler runs, but using a capturing event handler.

        // Session history has the URL of the page that failed
        // to load, not the one of the error page. So, just call
        // reload(), which will also repost POST data correctly.
        try {
          location.reload();
        } catch (e) {
          // We probably tried to reload a URI that caused an exception to
          // occur;  e.g. a nonexistent file.
        }

        buttonEl.disabled = true;
      }

      function initPage()
      {
        var err = getErrorCode();
        
        // if it's an unknown error or there's no title or description
        // defined, get the generic message
        var errTitle = document.getElementById("et_" + err);
        var errDesc  = document.getElementById("ed_" + err);
        if (!errTitle || !errDesc)
        {
          errTitle = document.getElementById("et_generic");
          errDesc  = document.getElementById("ed_generic");
        }

        var title = document.getElementById("errorTitleText");
        if (title)
        {
          title.parentNode.replaceChild(errTitle, title);
          // change id to the replaced child's id so styling works
          errTitle.id = "errorTitleText";
        }

        var sd = document.getElementById("errorShortDescText");
        if (sd)
          sd.textContent = getDescription();

        var ld = document.getElementById("errorLongDesc");
        if (ld)
        {
          ld.parentNode.replaceChild(errDesc, ld);
          // change id to the replaced child's id so styling works
          errDesc.id = "errorLongDesc";
        }

        // remove undisplayed errors to avoid bug 39098
        var errContainer = document.getElementById("errorContainer");
        errContainer.parentNode.removeChild(errContainer);

        var className = getCSSClass();
        if (className && className != "expertBadCert") {
          // Associate a CSS class with the root of the page, if one was passed in,
          // to allow custom styling.
          // Not "expertBadCert" though, don't want to deal with the favicon
          document.documentElement.className = className;

          // Also, if they specified a CSS class, they must supply their own
          // favicon.  In order to trigger the browser to repaint though, we
          // need to remove/add the link element. 
          var favicon = document.getElementById("favicon");
          var faviconParent = favicon.parentNode;
          faviconParent.removeChild(favicon);
          favicon.setAttribute("href", "chrome://global/skin/icons/" + className + "_favicon.png");
          faviconParent.appendChild(favicon);
        }
        if (className == "expertBadCert") {
          showSecuritySection();
        }

        if (err == "remoteXUL") {
          // Remove the "Try again" button for remote XUL errors given that
          // it is useless.
          document.getElementById("errorTryAgain").style.display = "none";
        }

        if (err == "cspFrameAncestorBlocked") {
          // Remove the "Try again" button for CSP frame ancestors violation, since it's
          // almost certainly useless. (Bug 553180)
          document.getElementById("errorTryAgain").style.display = "none";
        }

        if (err == "nssBadCert") {
          // Remove the "Try again" button for security exceptions, since it's
          // almost certainly useless.
          document.getElementById("errorTryAgain").style.display = "none";
          document.getElementById("errorPageContainer").setAttribute("class", "certerror");
          addDomainErrorLink();
        }
        else {
          // Remove the override block for non-certificate errors.  CSS-hiding
          // isn't good enough here, because of bug 39098
          var secOverride = document.getElementById("securityOverrideDiv");
          secOverride.parentNode.removeChild(secOverride);
        }
      }
      
      function showSecuritySection() {
        // Swap link out, content in
        document.getElementById('securityOverrideContent').style.display = '';
        document.getElementById('securityOverrideLink').style.display = 'none';
      }
      
      /* In the case of SSL error pages about domain mismatch, see if
         we can hyperlink the user to the correct site.  We don't want
         to do this generically since it allows MitM attacks to redirect
         users to a site under attacker control, but in certain cases
         it is safe (and helpful!) to do so.  Bug 402210
      */
      function addDomainErrorLink() {
        // Rather than textContent, we need to treat description as HTML
        var sd = document.getElementById("errorShortDescText");
        if (sd) {
          var desc = getDescription();
          
          // sanitize description text - see bug 441169
          
          // First, find the index of the <a> tag we care about, being careful not to
          // use an over-greedy regex
          var re = /<a id="cert_domain_link" title="([^"]+)">/;
          var result = re.exec(desc);
          if(!result)
            return;
          
          // Remove sd's existing children
          sd.textContent = "";

          // Everything up to the link should be text content
          sd.appendChild(document.createTextNode(desc.slice(0, result.index)));
          
          // Now create the link itself
          var anchorEl = document.createElement("a");
          anchorEl.setAttribute("id", "cert_domain_link");
          anchorEl.setAttribute("title", result[1]);
          anchorEl.appendChild(document.createTextNode(result[1]));
          sd.appendChild(anchorEl);
          
          // Finally, append text for anything after the closing </a>
          sd.appendChild(document.createTextNode(desc.slice(desc.indexOf("</a>") + "</a>".length)));
        }

        var link = document.getElementById('cert_domain_link');
        if (!link)
          return;
        
        var okHost = link.getAttribute("title");
        var thisHost = document.location.hostname;
        var proto = document.location.protocol;

        // If okHost is a wildcard domain ("*.example.com") let's
        // use "www" instead.  "*.example.com" isn't going to
        // get anyone anywhere useful. bug 432491
        okHost = okHost.replace(/^\*\./, "www.");

        /* case #1: 
         * example.com uses an invalid security certificate.
         *
         * The certificate is only valid for www.example.com
         *
         * Make sure to include the "." ahead of thisHost so that
         * a MitM attack on paypal.com doesn't hyperlink to "notpaypal.com"
         *
         * We'd normally just use a RegExp here except that we lack a
         * library function to escape them properly (bug 248062), and
         * domain names are famous for having '.' characters in them,
         * which would allow spurious and possibly hostile matches.
         */
        if (endsWith(okHost, "." + thisHost))
          link.href = proto + okHost;

        /* case #2:
         * browser.garage.maemo.org uses an invalid security certificate.
         *
         * The certificate is only valid for garage.maemo.org
         */
        if (endsWith(thisHost, "." + okHost))
          link.href = proto + okHost;
      }
      
      function endsWith(haystack, needle) {
        return haystack.slice(-needle.length) == needle;
      }

    ]]></script>
  </head>

  <body dir="ltr">

    <!-- ERROR ITEM CONTAINER (removed during loading to avoid bug 39098) -->
    

    <!-- PAGE CONTAINER (for styling purposes only) -->
    <div id="errorPageContainer">
    
      <!-- Error Title -->
      <div id="errorTitle">
        <h1 id="errorTitleText">Không tìm thấy máy chủ</h1>
      </div>
      
      <!-- LONG CONTENT (the section most likely to require scrolling) -->
      <div id="errorLongContent">
      
        <!-- Short Description -->
        <div id="errorShortDesc">
          <p id="errorShortDescText">Firefox không thể tìm thấy máy chủ tại www.facebook.com.</p>
        </div>

        <!-- Long Description (Note: See netError.dtd for used XHTML tags) -->
        <div id="errorLongDesc"><ul> 
<li>Kiểm tra các lỗi gõ địa chỉ như là 
<strong>ww</strong>.mozilla.com thay vì gõ đúng phải là 
<strong>www</strong>.mozilla.com</li> 
<li>Nếu bạn không thể mở bất kì trang nào, hãy kiểm tra kết nối mạng của bạn.</li> 
<li>Nếu máy tính hoặc mạng của bạn được bảo vệ bởi tường lửa hoặc proxy, hãy chắc rằng Firefox được phép truy cập Web.</li> 
</ul></div>

        <!-- Override section - For ssl errors only.  Removed on init for other
             error types.  -->
        
      </div>

      <!-- Retry Button -->
      <button id="errorTryAgain" autocomplete="off" onclick="retryThis(this);">Thử Lại</button>
      <script>
        // Only do autofocus if we're the toplevel frame; otherwise we
        // don't want to call attention to ourselves!  The key part is
        // that autofocus happens on insertion into the tree, so we
        // can remove the button, add @autofocus, and reinsert the
        // button.
        if (window.top == window) {
            var button = document.getElementById("errorTryAgain");
            var nextSibling = button.nextSibling;
            var parent = button.parentNode;
            parent.removeChild(button);
            button.setAttribute("autofocus", "true");
            parent.insertBefore(button, nextSibling);
        }
      </script>

    </div>

    <!--
    - Note: It is important to run the script this way, instead of using
    - an onload handler. This is because error pages are loaded as
    - LOAD_BACKGROUND, which means that onload handlers will not be executed.
    -->
    <script type="application/javascript">initPage();</script>

  </body>
</html>